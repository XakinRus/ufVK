import datetime
import time
import requests
from SettingsReader import GetParams


def VkMethod(methodName, methodParams=None):
    """
    :param methodName: –∏–º—è –º–µ—Ç–æ–¥–∞
    :param methodParams: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–∞
    :return: –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    """
    if methodParams is None:
        methodParams = {}
    methodParams['v'] = param.apiversion
    methodParams['access_token'] = param.access_token
    r = requests.post('https://api.vk.com/method/' + methodName, methodParams)
    r_json = r.json()
    if 'error' in r_json:
        raise requests.exceptions.RequestException(f'[{r_json["error"]["error_code"]}] '
                                                   f'{r_json["error"]["error_msg"]}')
    return r_json['response']


param = GetParams().par
while True:
    try:
        if param.status:
            status = ''
            if param.time:
                t = datetime.datetime.now()
                status += f"üï∞ {t.strftime('%H:%M')} | üóì {t.strftime('%d.%m.%Y')} | "

            if param.photoprofile and param.photolikecount:
                LikeCount = VkMethod('photos.get', {'album_id': 'profile', 'rev': 1, 'extended': 1, 'count': 1})
                status += f"‚ù§ –ù–∞ –∞–≤–µ: {LikeCount['items'][0]['likes']['count']} | "

            if param.followerscount:
                FollowersCount = VkMethod('users.getFollowers', {'count': '1000'})
                status += f"üë• –ü–æ–¥–ø–∏—Å–∏–∫–æ–≤: {FollowersCount['count']} | "

            if param.unreadmmssagecount:
                MessageCount = VkMethod('account.getCounters', {'filter': 'messages'})
                status += f"üì¨ –°–æ–æ–±—â–µ–Ω–∏–π: {MessageCount['messages']} | "

            if param.blacklistmembercount:
                memberCount = VkMethod('account.getBanned', {'count': '200'})
                status += f"‚õî –í –ß–°: {memberCount['count']} | "

            if param.giftscount:
                gifts = VkMethod('gifts.get', {'count': '200'})
                status += f"üéÅ –ü–æ–¥–∞—Ä–∫–∏: {gifts['count']} | "

            if param.decor:
                for number in param.decorNumber:
                    status = status.replace(number, param.decorNumber[number])

            VkMethod("status.set", {"text": status[:-3]})

        if param.eternalonline:
            VkMethod("account.setOnline")

        if param.deleteallfriendsrequests:
            VkMethod("friends.deleteAllRequests")

    except Exception as Error:
        t = datetime.datetime.now()  # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—à–∏–±–∫–∏
        print('–ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ settings.ini –≤–≤–µ–¥–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ'
              f'\n–í—Ä–µ–º—è:\n {t.strftime("%H:%M")}\n–û—à–∏–±–∫–∞:\n{str(Error)}\n{"--" * 5}')
    finally:
        time.sleep(int(param.timetosleep))
